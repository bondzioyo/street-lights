{"version":3,"sources":["img/street-light.svg","components/Rightfield.js","components/Mainscreen.js","components/PredictionRaport.js","components/MoreThan20perc.js","components/LessThan20perc.js","components/ComparisionRaport.js","App.js","reportWebVitals.js","index.js"],"names":["Rightfield","src","logo","alt","Mainscreen","setInputPolValue","setSelectPolValue","setPowerOfLamp","inputPolValue","selectPolValue","setInputNolValue","setNumberOfLamp","inputNolValue","setInputUsedenValue","setUsedEnergy","inputUsedenValue","inputRateValue","setInputRateValue","selectRateValue","setSelectRateValue","setRate","className","type","placeholder","min","defaultValue","onChange","e","target","value","name","onClick","preventDefault","groupBy","items","key","reduce","result","item","PredictionRaport","powerOfLamp","numberOfLamp","rate","data","NightTime","map","nt","month","day","powerConsumption","night_time","stawka","numberFormat","Intl","NumberFormat","tablica","i","tab","tab2","mostConsumpionMonth","temporaryVar1","miesiac_num","j","a","b","toFixed","miesiac_txt","consumptedPower","koszt","data2","labels","datasets","label","backgroundColor","borderWidth","data3","options","scales","yAxes","ticks","beginAtZero","stepSize","responsive","maintainAspectRatio","format","MoreThan20perc","roznica","x","style","background","color","fontSize","console","log","LessThan20perc","ComparisionRaport","usedEnergy","praktycznaMocOprawy","dataPraktyczne","temporaryVar2","info","dataChart","App","raport","useState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.68e3d08e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/street-light.284f8f9a.svg\";","import React from \"react\";\nimport logo from \"../img/street-light.svg\";\n// import '../component_scss/Mainscreen/Mainscreen.css'\n// import '../component_scss/Rightfield/Rightfield.css'\n\nconst Rightfield = () => {\n  return <div>\n      <img src={logo} alt=\"Logo\" />\n  </div>;\n};\n\nexport default Rightfield;\n","import React from \"react\";\nimport \"../component_scss/Mainscreen/Mainscreen.css\";\n// import PredictionRaport from \"./PredictionRaport\";\nimport Rightfield from \"./Rightfield\";\n// import AwesomeButton from \"../react-awesome-button/src/components/AwesomeButton\";\n// import \"../react-awesome-button/dist/themes/theme-amber.css\";\n\nvar input = false;\n\nconst Mainscreen = ({\n  setInputPolValue,\n  setSelectPolValue,\n  // powerOfLamp,\n  setPowerOfLamp,\n  inputPolValue,\n  selectPolValue,\n  setInputNolValue,\n  setNumberOfLamp,\n  inputNolValue, \n  setInputUsedenValue,\n  setUsedEnergy,\n  inputUsedenValue,\n  inputRateValue,\n  setInputRateValue,\n  selectRateValue,\n  setSelectRateValue,\n  setRate\n}) => {\n\n  \n\n  const inputPolValueHandler = (e) => {\n    // console.log(e.target.value);\n    // input = true;\n    // console.log(input)\n    setInputPolValue(e.target.value);\n  };\n\n  const selectPolValueHandler = (e) => {\n    // console.log(e.target.value);\n    // input = false;\n    // console.log(input)\n    // setInputPolValue(e.target.value);\n    setSelectPolValue(e.target.value);\n    // setInputPolValue(e.target.value);\n  };\n\n  const inputNolValueHandler = (e) => {\n    setInputNolValue(e.target.value);\n  }\n\n  const inputUsedenValueHandler = (e) => {\n    setInputUsedenValue(e.target.value);\n  }\n\nconst inputRateValueHandler = (e) => {\n  setInputRateValue(e.target.value);\n}\n\nconst selectRateValueHandler = (e) => {\n  setSelectRateValue(e.target.value);\n}\n\n  const submitValuesHandler = (e) => {\n    e.preventDefault();\n    if(inputNolValue >= 0){\n    setNumberOfLamp(inputNolValue);}\n    if(inputPolValue != 0){\n      setPowerOfLamp(inputPolValue);\n    }\n    else if(selectPolValue != 0){\n      setPowerOfLamp(selectPolValue);\n    }\n    if(inputUsedenValue!==''){\n      setUsedEnergy(inputUsedenValue);\n    }\n    if(inputRateValue != 0){\n      setRate(inputRateValue);\n    }\n    else if(selectRateValue != 0){\n      setRate(selectRateValue);\n    }\n\n  };\n\n  return (\n    <div>\n      <main>\n        <div className=\"leftfield\">\n          <div className=\"inputarea\">\n            <div className=\"inputdescription\">\n              Podaj moc oprawy* lub wybierz z listy\n            </div>\n            <input\n              className=\"inputvalue\"\n              type=\"number\"\n              placeholder=\"Moc [W]\"\n              min=\"0\"\n              defaultValue={inputPolValue} //polvalue = power of lamp value\n              onChange={inputPolValueHandler}\n            ></input>\n            <select className=\"inputselect\" defaultValue=\"0\" onChange={selectPolValueHandler}>\n              <option value=\"\">Wybierz</option>\n              <option value=\"60\">ALC LED 60W</option>\n              <option value=\"90\">ALC LED 90W</option>\n              <option value=\"40\">Brd CREE</option>\n              <option value=\"50\">Bridgelux IP65</option>\n              <option value=\"33\">Crown Basic LED 5050lm</option>\n              <option value=\"62\">Crown Basic LED 7800lm</option>\n              <option value=\"50\">Everon PLUS 100 50W</option>\n              <option value=\"60\">Everon PLUS 100 60W</option>\n              <option value=\"140\">Everon PLUS 200 140W</option>\n              <option value=\"180\">Everon PLUS 200 180W</option>\n              <option value=\"30\">Kepler LED IP66 30W</option>\n              <option value=\"50\">Majoris IP65</option>\n              <option value=\"150\">Malaga SGS102 Son-T150W</option>\n              <option value=\"50\">MZZ COB Epistar</option>\n              <option value=\"100\">Selenium SGP340 Son-T100W</option>\n              <option value=\"40\">Titan IP65</option>\n              <option value=\"30\">WHL COB Epistar</option>\n              <option value=\"106\">Urbano LED ED 11750lm</option>\n              <option value=\"200\">Urbano LED 200W</option>\n            </select>\n          </div>\n          <div className=\"inputarea\">\n            <div className=\"inputdescription\">Podaj ilość lamp</div>\n            <input\n              className=\"inputvalue\"\n              type=\"number\"\n              placeholder=\"Ilość lamp\"\n              min=\"1\"\n              value={inputNolValue}\n              onChange={inputNolValueHandler}\n            ></input>\n            <div className=\"inputcheck\">\n              {/* *Podałem łączną moc dla wszystkich opraw */}\n              {/* <input className=\"checkmark\" type=\"checkbox\"></input> */}\n            </div>\n          </div>\n          <div className=\"inputarea\">\n            <div className=\"inputdescription\">\n              Wprowadź swoje zużycie energii w kWh\n            </div>\n            <input\n              className=\"inputvalue\"\n              type=\"number\"\n              placeholder=\"Zużycie [kWh]\"\n              onChange={inputUsedenValueHandler}\n            ></input>\n            <div className=\"inputselect\"></div>\n          </div>\n          <div className=\"inputarea\">\n            <div className=\"inputdescription\">\n              Wprowadź stawkę za energię lub wybierz sprzedawcę, który działa w\n              Twoim regionie\n            </div>\n            <input\n              className=\"inputvalue\"\n              type=\"number\"\n              placeholder=\"Stawka [zł/kWh]\"\n              defaultValue={inputRateValue} \n              onChange={inputRateValueHandler}\n            ></input>\n            <select className=\"inputselect\" name=\"Dostawca\" defaultValue={selectRateValue} onChange={selectRateValueHandler}>\n              <option value=\"\">Wybierz sprzedawcę</option>\n              {/* <option value=\"0.76\">Innogy</option> */}\n              <option value=\"0.461\">Energa</option>\n              <option value=\"0.5839\">Tauron</option>\n              {/* <option value=\"0.75\">Tauron (Katowice/Gliwice)</option> */}\n              <option value=\"0.4119\">Enea</option>\n              <option value=\"0.3568\">PGE</option>\n            </select>\n          </div>\n          <div className=\"inputarea\">\n            <button className=\"findout\" type=\"submit\" onClick={submitValuesHandler}>\n              SPRAWDŹ →\n            </button>\n            {/* <AwesomeButton type=\"primary\" size=\"large\" onClick={submitPolValueHandler, displayPredictionRaport}>\n              SPRAWDŹ ➥ \n            </AwesomeButton> */}\n          </div>\n        </div>\n        <div className=\"rightfield\">\n          <Rightfield />\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default Mainscreen;\n","import React from \"react\";\nimport \"../component_scss/PredictionRaport/PredictionRaport.css\";\n// import PowerOfLampComponent from \"./PowerOfLampComponent\";\nimport NightTime from \"../data/NightTime.json\";\n\nimport { Bar } from \"react-chartjs-2\";\n// import { ResponsiveBar } from '@nivo/bar';\n\nconst groupBy = (items, key) =>\n  items.reduce(\n    (result, item) => ({\n      ...result,\n      [item[key]]: [...(result[item[key]] || []), item],\n    }),\n    {}\n  );\n\nconst PredictionRaport = ({ powerOfLamp, numberOfLamp, rate }) => {\n  // console.log(powerOfLamp.map);\n\n  // var czasSwiecenia = NightTime.map((nt) => nt.night_time).reduce(\n  //   (a, b) => a + b,\n  //   0\n  // );\n\n  var data = NightTime.map((nt) => {\n    return {\n      month: nt.month,\n      day: nt.day,\n      powerConsumption: nt.night_time * powerOfLamp * numberOfLamp,\n    };\n  });\n\n  // var stawka = 0.4610;\n  var stawka = rate;\n  var numberFormat = new Intl.NumberFormat(\"pl\");\n\n  // console.log(data.map((e) => e.powerConsumption));\n  // console.log(data.map((e) => e.day));\n  // var x = [data.map((e) => e.day), data.map((e) => e.powerConsumption)];\n  // console.log(data);\n  // var x = [Array.from({length: 365}, (_, i) => i + 1), data.map((e) => e.powerConsumption)];\n\n  // console.log(x);\n\n  // console.log(data.map((nt) => nt.powerConsumption).reduce(function (a, b) {\n  //     return a + b;\n  //   }, 0));\n\n  // console.log(groupBy(data, \"month\")[1].map((e) => e.powerConsumption).reduce(function (a, b) {\n  //   return a + b;\n  // }, 0));\n  var tablica = [];\n  for (var i = 1; i < 365; i++) {\n    tablica[i] = [\n      \"day: \" + i,\n      \"pobranaMoc: \" + data.map((e) => e.powerConsumption)[i],\n    ];\n  }\n  // console.log(tablica);\n  // export const dataSource = tablica;\n\n  // console.log(test);\n  // console.log(groupBy(data, 'month')[1]);\n  // console.log(groupBy(test, 'month')[5]);\n  // console.log(groupBy(test, 'month')[5].map(e => e.powerConsumption).reduce(function(a, b) {\n  //   return a+b;\n  // }, 0));\n  var tab =[];\n  var tab2 =[];\n  var mostConsumpionMonth = 0;\n  var temporaryVar1 = 0;\n  // var i = 1;\n  var miesiac_num = 0;\n  for (var j = 1; j <= 12; j++) {\n    // console.log(groupBy(test, 'month')[i].map(e => e.powerConsumption).reduce(function(a, b) {\n    //   return a+b;\n    // }, 0));\n    temporaryVar1 = groupBy(data, \"month\")\n      [j].map((e) => e.powerConsumption)\n      .reduce(function (a, b) {\n        return a + b;\n      }, 0);\n      tab[j-1] = temporaryVar1/1000;\n      tab2[j-1] = ((temporaryVar1/1000)*stawka).toFixed(2);\n\n    if (temporaryVar1 > mostConsumpionMonth) {\n      mostConsumpionMonth = temporaryVar1;\n      miesiac_num = j;\n    }\n  }\n//   console.log(numberFormat.format(((temporaryVar1/1000)*stawka).toFixed(2)))\n// console.log(tab);\n\n  var miesiac_txt = \"\";\n  switch (miesiac_num) {\n    case 1:\n      miesiac_txt = \"Styczeń\";\n      break;\n    case 2:\n      miesiac_txt = \"Luty\";\n      break;\n    case 3:\n      miesiac_txt = \"Marzec\";\n      break;\n    case 4:\n      miesiac_txt = \"Kwiecień\";\n      break;\n    case 5:\n      miesiac_txt = \"Maj\";\n      break;\n    case 6:\n      miesiac_txt = \"Czerwiec\";\n      break;\n    case 7:\n      miesiac_txt = \"Lipiec\";\n      break;\n    case 8:\n      miesiac_txt = \"Sierpień\";\n      break;\n    case 9:\n      miesiac_txt = \"Wrzesień\";\n      break;\n    case 10:\n      miesiac_txt = \"Październik\";\n      break;\n    case 11:\n      miesiac_txt = \"Listopad\";\n      break;\n    case 12:\n      miesiac_txt = \"Grudzień\";\n      break;\n    default:\n      miesiac_txt = `*Miesiąc*`;\n  }\n\n  //     var lol[i] = groupBy(test, 'month')[5].map(e => e.powerConsumption).reduce(function(a, b) {\n  //       return a+b;\n  //     }, 0)\n  // console.log(lol);\n\n  // var zuzycie = (czasSwiecenia * powerOfLamp * numberOfLamp) / 1000;\n\n  var consumptedPower =\n    data\n      .map((nt) => nt.powerConsumption)\n      .reduce(function (a, b) {\n        return a + b;\n      }, 0) / 1000;\n\n  \n  // tab2 = tab;\n\n  var koszt = consumptedPower * stawka;\n\n  \n\n  const data2 = {\n    labels: [\"Styczeń\", 'Luty', 'Marzec', 'Kwiecień', 'Maj', 'Czerwiec', 'Lipiec', 'Sierpień', 'Wrzesień', 'Październik', 'Listopad', 'Grudzień'],\n    datasets: [\n      {\n        label: 'Zuzycie energii [kWh]', \n        // data: [1288, 19, 3, 5, 2, 3],\n        data: tab,\n        backgroundColor: '#f7e76a98',\n        // backgroundColor: [\n        //   'rgba(255, 99, 132, 0.2)',\n        //   'rgba(54, 162, 235, 0.2)',\n        //   'rgba(255, 206, 86, 0.2)',\n        //   'rgba(75, 192, 192, 0.2)',\n        //   'rgba(153, 102, 255, 0.2)',\n        //   'rgba(255, 159, 64, 0.2)',\n        // ],\n        // borderColor: [\n        //   'rgba(255, 99, 132, 1)',\n        //   'rgba(54, 162, 235, 1)',\n        //   'rgba(255, 206, 86, 1)',\n        //   'rgba(75, 192, 192, 1)',\n        //   'rgba(153, 102, 255, 1)',\n        //   'rgba(255, 159, 64, 1)',\n        // ],\n        borderWidth: 1,\n      },\n    ],\n  }\n  \n  const data3 = {\n    labels: [\"Styczeń\", 'Luty', 'Marzec', 'Kwiecień', 'Maj', 'Czerwiec', 'Lipiec', 'Sierpień', 'Wrzesień', 'Październik', 'Listopad', 'Grudzień'],\n    datasets: [\n      {\n        label: 'Koszt energii [zł]', \n        // data: [1288, 19, 3, 5, 2, 3],\n        data: tab2,\n        backgroundColor: 'rgba(82, 70, 248, 0.829)',\n        // backgroundColor: [\n        //   'rgba(255, 99, 132, 0.2)',\n        //   'rgba(54, 162, 235, 0.2)',\n        //   'rgba(255, 206, 86, 0.2)',\n        //   'rgba(75, 192, 192, 0.2)',\n        //   'rgba(153, 102, 255, 0.2)',\n        //   'rgba(255, 159, 64, 0.2)',\n        // ],\n        // borderColor: [\n        //   'rgba(255, 99, 132, 1)',\n        //   'rgba(54, 162, 235, 1)',\n        //   'rgba(255, 206, 86, 1)',\n        //   'rgba(75, 192, 192, 1)',\n        //   'rgba(153, 102, 255, 1)',\n        //   'rgba(255, 159, 64, 1)',\n        // ],\n        borderWidth: 1,\n      },\n    ],\n  }\n\n  const options = {\n  \n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: true,\n            min: 0,\n            // max: 500,\n            stepSize: 100,\n          },\n        },\n      ],\n    },\n    responsive: true,\n    maintainAspectRatio: false,\n  }\n\n  return (\n    <div className=\"raportfield\">\n      <div className=\"data\">\n        <div className=\"chart-container\">\n          <div className=\"header\">Raport prognozy</div>\n          <div className=\"chart\">\n            <h1 className=\"header-chart\">Prognoza zużycia</h1>\n            <div className='chart1'>\n            <Bar data={data2} options={options}/>\n            </div>\n            <div className='chart2'>\n            <Bar data={data3} options={options}/>\n            </div>\n          </div>\n        </div>\n        <div className=\"details\">\n          <h1 className=\"header-details\">Szczegółowe dane</h1>\n          <div className=\"details-data-container\">\n            <div>Roczny koszt energii dla podanej mocy instalacji:</div>\n            <div className=\"details-data-value\">{numberFormat.format(koszt.toFixed(2))} zł</div>\n          </div>\n          <div className=\"details-data-container\">\n            <div>Roczne zużycie energii:</div>\n            <div className=\"details-data-value\">{numberFormat.format(consumptedPower.toFixed(3))} kWh</div>\n          </div>\n          <div className=\"details-data-container\">\n            <div>Najwyższe zakładane zużycie przypada na miesiąc:</div>\n            <div className=\"details-data-value\">{miesiac_txt}</div>\n          </div>\n          <div className=\"details-data-container\">\n            <div>W tym miesiącu zużycie wynosi:</div>\n            <div className=\"details-data-value\">{numberFormat.format((mostConsumpionMonth / 1000).toFixed(3))} kWh</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PredictionRaport;\n","import React from 'react';\nimport \"../component_scss/ComparisionRport/ComparisionRaport.css\";\nimport InfoBaner from './InfoBaner';\n// import InfoBaner from './InfoBaner';\n\nconst MoreThan20perc= ({roznica}) => {\n    var x=0;\n    var jeb;\n    jeb = <div></div>;\n\nconst show = (e) => {\n    e.preventDefault();\n    console.log(x)\n    x++;\n    if (x>2){}\n}\n\n\n\n    return (\n    <div className=\"detailInfo\" style={{ background: 'rgba(248, 66, 66, 0.267)', color: 'red' }}>\n      Twoje zużycie jest o {roznica.toFixed(2)} % większe niz jego teoretyczna\n      wartość {<br></br>} <span style={{ fontSize: 50 }}>⚠</span>\n      {/* <InfoBaner x={x}/> */}\n      <div className=\"infotext\" onClick={show}>i</div> \n    </div>);\n  };\n\n  export default MoreThan20perc;","import React from 'react';\nimport \"../component_scss/ComparisionRport/ComparisionRaport.css\";\n\nconst LessThan20perc= ({roznica}) => {\n    return (\n    <div className=\"detailInfo\" style={{ background: 'rgba(43, 250, 36, 0.397)', color: 'green' }}>\n      Różnica w zużyciu energii wynosi {roznica.toFixed(2)} % i jej wartość mieści się w normie.\n    </div>);\n  };\n\n  export default LessThan20perc;","import React from \"react\";\nimport \"../component_scss/ComparisionRport/ComparisionRaport.css\";\nimport NightTime from \"../data/NightTime.json\";\n\nimport { Bar } from \"react-chartjs-2\";\nimport MoreThan20perc from \"./MoreThan20perc\";\nimport LessThan20perc from \"./LessThan20perc\";\n\nconst ComparisionRaport = ({ powerOfLamp, numberOfLamp, usedEnergy, rate }) => {\n  const groupBy = (items, key) =>\n    items.reduce(\n      (result, item) => ({\n        ...result,\n        [item[key]]: [...(result[item[key]] || []), item],\n      }),\n      {}\n    );\n\n  console.log();\n\n  var stawka = rate;\n  var numberFormat = new Intl.NumberFormat(\"pl\");\n\n  var data = NightTime.map((nt) => {\n    return {\n      month: nt.month,\n      day: nt.day,\n      powerConsumption: nt.night_time * powerOfLamp * numberOfLamp,\n    };\n  });\n\n  console.log(\n    NightTime.map((e) => e.night_time).reduce(function (a, b) {\n      return a + b;\n    }, 0)\n  );\n\n  var sumaNightTime = NightTime.map((e) => e.night_time).reduce(function (\n    a,\n    b\n  ) {\n    return a + b;\n  },\n  0);\n\n  // console.log(usedEnergy*1000/(sumaNightTime*numberOfLamp))\n\n  var praktycznaMocOprawy =\n    (usedEnergy * 1000) / (sumaNightTime * numberOfLamp);\n\n  var dataPraktyczne = NightTime.map((nt) => {\n    return {\n      month: nt.month,\n      day: nt.day,\n      powerConsumption: nt.night_time * praktycznaMocOprawy * numberOfLamp,\n    };\n  });\n\n  var tab = [];\n  var tab2 = [];\n  var temporaryVar1 = 0;\n  var temporaryVar2 = 0;\n  // var miesiac_num = 0;\n  for (var j = 1; j <= 12; j++) {\n    temporaryVar1 = groupBy(dataPraktyczne, \"month\")\n      [j].map((e) => e.powerConsumption)\n      .reduce(function (a, b) {\n        return a + b;\n      }, 0);\n    tab[j - 1] = (temporaryVar1 / 1000).toFixed(2);\n\n    temporaryVar2 = groupBy(data, \"month\")\n      [j].map((e) => e.powerConsumption)\n      .reduce(function (a, b) {\n        return a + b;\n      }, 0);\n    tab2[j - 1] = (temporaryVar2 / 1000).toFixed(2);\n  }\n\n  console.log(tab2);\n\n  var consumptedPower =\n    data\n      .map((nt) => nt.powerConsumption)\n      .reduce(function (a, b) {\n        return a + b;\n      }, 0) / 1000;\n\n  var koszt = consumptedPower * stawka;\n\n  var roznica = (usedEnergy / consumptedPower - 1) * 100;\n\n  const dataChart = {\n    labels: [\n      \"Styczeń\",\n      \"Luty\",\n      \"Marzec\",\n      \"Kwiecień\",\n      \"Maj\",\n      \"Czerwiec\",\n      \"Lipiec\",\n      \"Sierpień\",\n      \"Wrzesień\",\n      \"Październik\",\n      \"Listopad\",\n      \"Grudzień\",\n    ],\n    datasets: [\n      {\n        label: \"Zuzycie energii [kWh]\",\n        data: tab,\n        backgroundColor: \"#f7e76a98\",\n        borderWidth: 1,\n      },\n      {\n        label: \"Zakładane zuzycie energii [kWh]\",\n        data: tab2,\n        backgroundColor: \"#f7a578\",\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  const options = {\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: true,\n            min: 0,\n            // max: 500,\n            stepSize: 100,\n          },\n        },\n      ],\n    },\n    responsive: true,\n    maintainAspectRatio: false,\n  };\n\n  var info;\n\n  if (roznica > 20){\n    info = <MoreThan20perc roznica={roznica}/>}\n    else if(roznica > 0 && roznica< 20) {info = <LessThan20perc roznica={roznica}/>}\n    else if(roznica < 0 && roznica > -20) {info = <LessThan20perc roznica={roznica}/>}\n\n  \n\n  return (\n    <div className=\"raportfield\">\n      <div className=\"data\">\n        <div className=\"chart-container\">\n          <div className=\"header\">Raport porównawczy</div>\n          <div className=\"chart\">\n            <h1 className=\"header-chart\">Porównanie danych o zużyciu</h1>\n            <div className=\"chart3\">\n              <Bar data={dataChart} options={options} />\n            </div>\n          </div>\n        </div>\n        {info}\n        <div className=\"details\">\n          <h1 className=\"header-details\">Szczegółowe dane</h1>\n          <div className=\"details-data-container\">\n            <div>Roczny koszt energii dla podanego zużycia energii:</div>\n            <div className=\"details-data-value\">{numberFormat.format((usedEnergy * stawka).toFixed(2))} zł</div>\n          </div>\n          <div className=\"details-data-container\">\n            <div>Przewidywany roczny koszt zużycia energii:</div>\n            <div className=\"details-data-value\">{numberFormat.format(koszt.toFixed(2))} zł</div>\n          </div>\n          <div className=\"details-data-container\">\n            <div>Przewidywane zużycie energii:</div>\n            <div className=\"details-data-value\">{numberFormat.format(consumptedPower.toFixed(3))} kWh</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ComparisionRaport;\n","import \"devextreme/dist/css/dx.common.css\";\nimport \"devextreme/dist/css/dx.light.css\";\n// import logo from \"./img/street-light.svg\";\nimport \"./App.css\";\nimport Mainscreen from \"./components/Mainscreen\";\nimport PredictionRaport from \"./components/PredictionRaport\";\nimport ComparisionRaport from \"./components/ComparisionRaport\";\nimport { useState } from \"react\";\n// import reactDom from \"react-dom\";\n\nfunction App() {\n  const [inputPolValue, setInputPolValue] = useState(\"\"); //PolValue - power of lamp value\n  const [selectPolValue, setSelectPolValue] = useState(\"\"); //PolValue - power of lamp value\n  const [powerOfLamp, setPowerOfLamp] = useState(\"\");\n  const [inputNolValue, setInputNolValue] = useState(\"\"); // NolValue - number of lamp value\n  const [numberOfLamp, setNumberOfLamp] = useState(\"\");\n  const [inputUsedenValue, setInputUsedenValue] = useState(\"\"); // Useden - used energy\n  const [usedEnergy, setUsedEnergy] = useState(\"\");\n  const [inputRateValue, setInputRateValue] = useState(\"\");\n  const [selectRateValue, setSelectRateValue] = useState(\"\");\n  const [rate, setRate] = useState(\"\");\n  // const [numberOfLamp, setNumberOfLamp] = useState(\"\");\n\n  var raport;\n  // if ((powerOfLamp !== \"\" && usedEnergy === \"\") || usedEnergy === 0) {\n  //   predictionRaport = <PredictionRaport powerOfLamp={powerOfLamp} numberOfLamp={numberOfLamp} />;\n  // }\n  if ( usedEnergy != 0 && powerOfLamp != 0) {\n    raport = (\n      <ComparisionRaport\n        powerOfLamp={powerOfLamp}\n        numberOfLamp={numberOfLamp}\n        usedEnergy={usedEnergy}\n        rate={rate}\n      />\n    );\n  }\n  else if (usedEnergy == 0 && powerOfLamp != 0){\n    raport = <PredictionRaport powerOfLamp={powerOfLamp} numberOfLamp={numberOfLamp} rate={rate}/>;\n  }\n  else if (usedEnergy === 0 && powerOfLamp === 0 && numberOfLamp === 0){raport = <div></div>;}\n\n  return (\n    <div>\n      <Mainscreen\n        //Power of lamp\n        inputPolValue={inputPolValue}\n        selectPolValue={selectPolValue}\n        setInputPolValue={setInputPolValue}\n        setSelectPolValue={setSelectPolValue}\n        setPowerOfLamp={setPowerOfLamp}\n        // powerOfLamp={powerOfLamp}\n        //Number of lamp\n        inputNolValue={inputNolValue}\n        setInputNolValue={setInputNolValue}\n        setNumberOfLamp={setNumberOfLamp}\n        // numberOfLamp={numberOfLamp}\n        inputUsedenValue={inputUsedenValue}\n        setInputUsedenValue={setInputUsedenValue}\n        setUsedEnergy={setUsedEnergy}\n        inputRateValue={inputRateValue}\n        setInputRateValue={setInputRateValue}\n        selectRateValue={selectRateValue}\n        setSelectRateValue={setSelectRateValue}\n        setRate={setRate}\n      />\n      {/* <PredictionRaport powerOfLamp={powerOfLamp} numberOfLamp={numberOfLamp} /> */}\n      {/* <ComparisionRaport powerOfLamp={powerOfLamp} numberOfLamp={numberOfLamp} usedEnergy={usedEnergy}/> */}\n      {raport}\n      {/* {comparisionRaport} */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}